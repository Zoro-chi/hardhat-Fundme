{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x8dfa5ea3ff2586f7a093162b5bedeb1487fbb5415696907d5f4a84b3f3895495",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1039577",
    "logsBloom": "0x
    "blockHash": "0x4a27b8039d74edece3ae134e18866ad074bd17693871653a75a075aa0d66ab54",
    "transactionHash": "0x8dfa5ea3ff2586f7a093162b5bedeb1487fbb5415696907d5f4a84b3f3895495",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1039577",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "ed07ef85ae3095e54bcbf5d89d1585f3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Zoro-chi\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A crowd funding contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A crowd funding contract\\n * @author Zoro-chi\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings cant be in memory\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunders(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xa4309a5bf03c4da8dfd48270e40e24502cd57cc4ca55036313b42e4b84dfe89a\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n        // or (Both will do the same thing)\\r\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // or (Both will do the same thing)\\r\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x353591c2f779dc366861f171b184ecd8f744241387b324c562d8058702d227c8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012f6380380620012f6833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111706200018660003960008181610397015281816105e601528181610636015261082c01526111706000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101545780639e87a5cd1461017f578063b60d4288146101aa578063be2693f0146101b45761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a592146101295761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aa8565b610305565b6040516100cc9190610aee565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b35565b61034d565b6040516101099190610b71565b60405180910390f35b34801561011e57600080fd5b50610127610395565b005b34801561013557600080fd5b5061013e6105d5565b60405161014b9190610aee565b60405180910390f35b34801561016057600080fd5b506101696105e2565b6040516101769190610b71565b60405180910390f35b34801561018b57600080fd5b5061019461060a565b6040516101a19190610beb565b60405180910390f35b6101b26101cb565b005b3480156101c057600080fd5b506101c9610634565b005b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c290919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c63565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102999190610cb2565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061036357610362610d08565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104c5576000600182815481106104405761043f610d08565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104bd90610d37565b91505061041d565b50600067ffffffffffffffff8111156104e1576104e0610d80565b5b60405190808252806020026020018201604052801561050f5781602001602082028036833780820191505090505b506001908051906020019061052592919061099e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054c90610de0565b60006040518083038185875af1925050503d8060008114610589576040519150601f19603f3d011682016040523d82523d6000602084013e61058e565b606091505b50509050806105d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c990610e41565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b9576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561073d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106f3575b5050505050905060005b81518110156107c757600082828151811061076557610764610d08565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107bf90610d37565b915050610747565b50600067ffffffffffffffff8111156107e3576107e2610d80565b5b6040519080825280602002602001820160405280156108115781602001602082028036833780820191505090505b506001908051906020019061082792919061099e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161086e90610de0565b60006040518083038185875af1925050503d80600081146108ab576040519150601f19603f3d011682016040523d82523d6000602084013e6108b0565b606091505b50509050806108be57600080fd5b5050565b6000806108ce836108fe565b90506000670de0b6b3a764000085836108e79190610e61565b6108f19190610eea565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561094757600080fd5b505afa15801561095b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097f9190610fa8565b5050509150506402540be400816109969190611023565b915050919050565b828054828255906000526020600020908101928215610a17579160200282015b82811115610a165782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109be565b5b509050610a249190610a28565b5090565b5b80821115610a41576000816000905550600101610a29565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7582610a4a565b9050919050565b610a8581610a6a565b8114610a9057600080fd5b50565b600081359050610aa281610a7c565b92915050565b600060208284031215610abe57610abd610a45565b5b6000610acc84828501610a93565b91505092915050565b6000819050919050565b610ae881610ad5565b82525050565b6000602082019050610b036000830184610adf565b92915050565b610b1281610ad5565b8114610b1d57600080fd5b50565b600081359050610b2f81610b09565b92915050565b600060208284031215610b4b57610b4a610a45565b5b6000610b5984828501610b20565b91505092915050565b610b6b81610a6a565b82525050565b6000602082019050610b866000830184610b62565b92915050565b6000819050919050565b6000610bb1610bac610ba784610a4a565b610b8c565b610a4a565b9050919050565b6000610bc382610b96565b9050919050565b6000610bd582610bb8565b9050919050565b610be581610bca565b82525050565b6000602082019050610c006000830184610bdc565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c4d601b83610c06565b9150610c5882610c17565b602082019050919050565b60006020820190508181036000830152610c7c81610c40565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cbd82610ad5565b9150610cc883610ad5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cfd57610cfc610c83565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d4282610ad5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d7557610d74610c83565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610dca600083610daf565b9150610dd582610dba565b600082019050919050565b6000610deb82610dbd565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e2b600b83610c06565b9150610e3682610df5565b602082019050919050565b60006020820190508181036000830152610e5a81610e1e565b9050919050565b6000610e6c82610ad5565b9150610e7783610ad5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610eb057610eaf610c83565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ef582610ad5565b9150610f0083610ad5565b925082610f1057610f0f610ebb565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f3a81610f1b565b8114610f4557600080fd5b50565b600081519050610f5781610f31565b92915050565b6000819050919050565b610f7081610f5d565b8114610f7b57600080fd5b50565b600081519050610f8d81610f67565b92915050565b600081519050610fa281610b09565b92915050565b600080600080600060a08688031215610fc457610fc3610a45565b5b6000610fd288828901610f48565b9550506020610fe388828901610f7e565b9450506040610ff488828901610f93565b935050606061100588828901610f93565b925050608061101688828901610f48565b9150509295509295909350565b600061102e82610f5d565b915061103983610f5d565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561107857611077610c83565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110b5576110b4610c83565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110f2576110f1610c83565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561112f5761112e610c83565b5b82820290509291505056fea2646970667358221220cb872e3ec6c2f1962282f869764cd9e75c75c4f8e748388bb7691eb2a2ed1ec864736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101545780639e87a5cd1461017f578063b60d4288146101aa578063be2693f0146101b45761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a592146101295761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aa8565b610305565b6040516100cc9190610aee565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b35565b61034d565b6040516101099190610b71565b60405180910390f35b34801561011e57600080fd5b50610127610395565b005b34801561013557600080fd5b5061013e6105d5565b60405161014b9190610aee565b60405180910390f35b34801561016057600080fd5b506101696105e2565b6040516101769190610b71565b60405180910390f35b34801561018b57600080fd5b5061019461060a565b6040516101a19190610beb565b60405180910390f35b6101b26101cb565b005b3480156101c057600080fd5b506101c9610634565b005b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c290919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c63565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102999190610cb2565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061036357610362610d08565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104c5576000600182815481106104405761043f610d08565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104bd90610d37565b91505061041d565b50600067ffffffffffffffff8111156104e1576104e0610d80565b5b60405190808252806020026020018201604052801561050f5781602001602082028036833780820191505090505b506001908051906020019061052592919061099e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054c90610de0565b60006040518083038185875af1925050503d8060008114610589576040519150601f19603f3d011682016040523d82523d6000602084013e61058e565b606091505b50509050806105d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c990610e41565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b9576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561073d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106f3575b5050505050905060005b81518110156107c757600082828151811061076557610764610d08565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107bf90610d37565b915050610747565b50600067ffffffffffffffff8111156107e3576107e2610d80565b5b6040519080825280602002602001820160405280156108115781602001602082028036833780820191505090505b506001908051906020019061082792919061099e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161086e90610de0565b60006040518083038185875af1925050503d80600081146108ab576040519150601f19603f3d011682016040523d82523d6000602084013e6108b0565b606091505b50509050806108be57600080fd5b5050565b6000806108ce836108fe565b90506000670de0b6b3a764000085836108e79190610e61565b6108f19190610eea565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561094757600080fd5b505afa15801561095b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097f9190610fa8565b5050509150506402540be400816109969190611023565b915050919050565b828054828255906000526020600020908101928215610a17579160200282015b82811115610a165782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109be565b5b509050610a249190610a28565b5090565b5b80821115610a41576000816000905550600101610a29565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7582610a4a565b9050919050565b610a8581610a6a565b8114610a9057600080fd5b50565b600081359050610aa281610a7c565b92915050565b600060208284031215610abe57610abd610a45565b5b6000610acc84828501610a93565b91505092915050565b6000819050919050565b610ae881610ad5565b82525050565b6000602082019050610b036000830184610adf565b92915050565b610b1281610ad5565b8114610b1d57600080fd5b50565b600081359050610b2f81610b09565b92915050565b600060208284031215610b4b57610b4a610a45565b5b6000610b5984828501610b20565b91505092915050565b610b6b81610a6a565b82525050565b6000602082019050610b866000830184610b62565b92915050565b6000819050919050565b6000610bb1610bac610ba784610a4a565b610b8c565b610a4a565b9050919050565b6000610bc382610b96565b9050919050565b6000610bd582610bb8565b9050919050565b610be581610bca565b82525050565b6000602082019050610c006000830184610bdc565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c4d601b83610c06565b9150610c5882610c17565b602082019050919050565b60006020820190508181036000830152610c7c81610c40565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cbd82610ad5565b9150610cc883610ad5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cfd57610cfc610c83565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d4282610ad5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d7557610d74610c83565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610dca600083610daf565b9150610dd582610dba565b600082019050919050565b6000610deb82610dbd565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e2b600b83610c06565b9150610e3682610df5565b602082019050919050565b60006020820190508181036000830152610e5a81610e1e565b9050919050565b6000610e6c82610ad5565b9150610e7783610ad5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610eb057610eaf610c83565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ef582610ad5565b9150610f0083610ad5565b925082610f1057610f0f610ebb565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f3a81610f1b565b8114610f4557600080fd5b50565b600081519050610f5781610f31565b92915050565b6000819050919050565b610f7081610f5d565b8114610f7b57600080fd5b50565b600081519050610f8d81610f67565b92915050565b600081519050610fa281610b09565b92915050565b600080600080600060a08688031215610fc457610fc3610a45565b5b6000610fd288828901610f48565b9550506020610fe388828901610f7e565b9450506040610ff488828901610f93565b935050606061100588828901610f93565b925050608061101688828901610f48565b9150509295509295909350565b600061102e82610f5d565b915061103983610f5d565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561107857611077610c83565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110b5576110b4610c83565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110f2576110f1610c83565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561112f5761112e610c83565b5b82820290509291505056fea2646970667358221220cb872e3ec6c2f1962282f869764cd9e75c75c4f8e748388bb7691eb2a2ed1ec864736f6c63430008080033",
  "devdoc": {
    "author": "Zoro-chi",
    "kind": "dev",
    "methods": {},
    "title": "A crowd funding contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}